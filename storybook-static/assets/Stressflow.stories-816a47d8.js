import{a as c,j as e}from"./jsx-runtime-29545a09.js";import{r as o}from"./index-76fb7be0.js";import{H as m,h as p,j as T,k as V,l as j,R as $}from"./style-c33e25af.js";import{P as f}from"./index-8d47fad6.js";import{c as C}from"./utils-0b1df067.js";import{A as q}from"./index-0bbeb583.js";import{M as A}from"./index-78095280.js";import{C as H,B as W}from"./index-98ec06de.js";import"./_commonjsHelpers-de833af9.js";import"./index-f3b9022e.js";import"./gapSize-536431cf.js";import"./isNativeReflectConstruct-4d4208e5.js";const X={left:10};function E({data:t}){const s=o.useCallback(n=>{console.log(n.target.value)},[]);return c("div",{className:"text-updater-node",children:[e(m,{type:"target",position:p.Top}),c("div",{children:[e("label",{htmlFor:"text",children:"Text:"}),e("input",{id:"text",name:"text",onChange:s,className:"nodrag"})]}),e(m,{type:"source",position:p.Bottom,id:"a"}),e(m,{type:"source",position:p.Bottom,id:"b",style:X})]})}E.__docgenInfo={description:"",methods:[],displayName:"CustomNode"};const u=({countNodesX:t,countNodesY:s,isCustom:n})=>{const a=o.useRef(null),[l,g]=o.useState(!1),{nodes:v,edges:S}=o.useMemo(()=>C({xNodes:t,yNodes:s,isCustom:n}),[t,s]),[w,h,M]=T(v),[P,N,_]=V(S),I=o.useCallback(r=>N(d=>j(r,d)),[]),y=o.useCallback(()=>{h(r=>r.map(d=>({...d,position:{x:Math.random()*1500,y:Math.random()*1500}})))},[]);o.useEffect(()=>{const{nodes:r,edges:d}=C({xNodes:t,yNodes:s,isCustom:n});h(r),N(d)},[t,s,n]);const B=o.useMemo(()=>({customNode:E}),[]);o.useEffect(()=>{l&&!a.current&&(a.current=setInterval(()=>{y()},1e3)),!l&&a.current&&(clearInterval(a.current),a.current=null)},[l]);const F=o.useCallback(()=>{g(!0)},[]),R=o.useCallback(()=>{g(!1)},[]);return c("div",{style:{height:"100vh"},children:[l&&e(q,{}),e("button",{onClick:F,children:"start"}),e("button",{onClick:R,children:"stop"}),e("button",{onClick:y,children:"change pos"}),c($,{nodes:w,edges:P,nodeTypes:B,onNodesChange:M,onEdgesChange:_,onConnect:I,onlyRenderVisibleElements:!1,fitView:!0,minZoom:0,children:[e(A,{}),e(H,{}),e(W,{})]})]})};u.propTypes={countNodesX:f.number,countNodesY:f.number,isCustom:f.bool};u.defaultProps={countNodesX:10,countNodesY:10,isCustom:!1};u.__docgenInfo={description:"",methods:[],displayName:"StressFlow",props:{countNodesX:{defaultValue:{value:"10",computed:!1},description:"Count of graph nodes",type:{name:"number"},required:!1},countNodesY:{defaultValue:{value:"10",computed:!1},description:"",type:{name:"number"},required:!1},isCustom:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1}}};const oe={title:"Reactflow/StressFlow",component:u,tags:["autodocs"]},i={args:{countNodesX:33,countNodesY:30,isCustom:!1}};var b,x,k;i.parameters={...i.parameters,docs:{...(b=i.parameters)==null?void 0:b.docs,source:{originalSource:`{
  args: {
    countNodesX: 33,
    countNodesY: 30,
    isCustom: false
  }
}`,...(k=(x=i.parameters)==null?void 0:x.docs)==null?void 0:k.source}}};const se=["Primary"];export{i as Primary,se as __namedExportsOrder,oe as default};
